<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sxx.xwl.community.community.dao.MessageMapper">

    <sql id="selectFields">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <sql id="insertFields">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>

    <!--    //查询当前用户的会话列表，每个回话返回最新的私信-->
    <!--    List<Message> selectConversations(int userId, int offset, int limit);-->
    <select id="selectConversations" resultType="message">
        SELECT
        <include refid="selectFields"></include>
        FROM message
        where id IN (
        select max(id)
        from message
        where status != 2
        and from_id != 1
        and (from_id = #{userId} or to_id = #{userId})
        group by conversation_id)
        ORDER BY id DESC
        LIMIT #{offset},#{limit}
    </select>

    <!--    //查询当前用户的会话数量-->
    <!--    int selectConversationCount(int userId);-->
    <select id="selectConversationCount" resultType="int">
        SELECT count(m.maxid)
        from (select max(id) as maxid
              from message
              where status != 2
                and from_id != 1
                and (from_id = #{userId} or to_id = #{userId})
              group by conversation_id) as m
    </select>

    <!--    //查询某个会话所包含的私信列表-->
    <!--    List<Message> selectLetters(String conversationId, int offset, int limit);-->
    <select id="selectLetters" resultType="message">
        select
        <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        ORDER BY id DESC
        LIMIT #{offset},#{limit}
    </select>

    <!--    //查询某个会话所包含的私信数量-->
    <!--    int selectLetterCount(String conversationId);-->
    <select id="selectLetterCount" resultType="int">
        select count(id)
        from message
        where status != 2
          and from_id != 1
          and conversation_id = #{conversationId}
    </select>

    <!--    //查询未读私信的数量-->
    <!--    int selectLetterUnreadCount(int userId, String conversationId);-->
    <select id="selectLetterUnreadCount" resultType="int">
        select count(id)
        from message
        where status = 0
          and from_id != 1
          and to_id = #{userId}
          <if test="conversationId!=null">
              and conversation_id = #{conversationId}
          </if>
    </select>
</mapper>